resource "aws_cloudformation_stack" "tfer--CDKToolkit" {
  capabilities       = ["CAPABILITY_AUTO_EXPAND", "CAPABILITY_IAM", "CAPABILITY_NAMED_IAM"]
  disable_rollback   = "false"
  name               = "CDKToolkit"
  template_body      = "Description: This stack includes resources needed to deploy AWS CDK apps into this environment\nParameters:\n  TrustedAccounts:\n    Description: List of AWS accounts that are trusted to publish assets and deploy stacks to this environment\n    Default: \"\"\n    Type: CommaDelimitedList\n  TrustedAccountsForLookup:\n    Description: List of AWS accounts that are trusted to look up values in this environment\n    Default: \"\"\n    Type: CommaDelimitedList\n  CloudFormationExecutionPolicies:\n    Description: List of the ManagedPolicy ARN(s) to attach to the CloudFormation deployment role\n    Default: \"\"\n    Type: CommaDelimitedList\n  FileAssetsBucketName:\n    Description: The name of the S3 bucket used for file assets\n    Default: \"\"\n    Type: String\n  FileAssetsBucketKmsKeyId:\n    Description: Empty to create a new key (default), 'AWS_MANAGED_KEY' to use a managed S3 key, or the ID/ARN of an existing key.\n    Default: \"\"\n    Type: String\n  ContainerAssetsRepositoryName:\n    Description: A user-provided custom name to use for the container assets ECR repository\n    Default: \"\"\n    Type: String\n  Qualifier:\n    Description: An identifier to distinguish multiple bootstrap stacks in the same environment\n    Default: hnb659fds\n    Type: String\n    AllowedPattern: \"[A-Za-z0-9_-]{1,10}\"\n    ConstraintDescription: Qualifier must be an alphanumeric identifier of at most 10 characters\n  PublicAccessBlockConfiguration:\n    Description: Whether or not to enable S3 Staging Bucket Public Access Block Configuration\n    Default: \"true\"\n    Type: String\n    AllowedValues:\n      - \"true\"\n      - \"false\"\n  InputPermissionsBoundary:\n    Description: Whether or not to use either the CDK supplied or custom permissions boundary\n    Default: \"\"\n    Type: String\n  UseExamplePermissionsBoundary:\n    Default: \"false\"\n    AllowedValues:\n      - \"true\"\n      - \"false\"\n    Type: String\n  BootstrapVariant:\n    Type: String\n    Default: \"AWS CDK: Default Resources\"\n    Description: Describe the provenance of the resources in this bootstrap stack. Change this when you customize the template. To prevent accidents, the CDK CLI will not overwrite bootstrap stacks with a different variant.\nConditions:\n  HasTrustedAccounts:\n    Fn::Not:\n      - Fn::Equals:\n          - \"\"\n          - Fn::Join:\n              - \"\"\n              - Ref: TrustedAccounts\n  HasTrustedAccountsForLookup:\n    Fn::Not:\n      - Fn::Equals:\n          - \"\"\n          - Fn::Join:\n              - \"\"\n              - Ref: TrustedAccountsForLookup\n  HasCloudFormationExecutionPolicies:\n    Fn::Not:\n      - Fn::Equals:\n          - \"\"\n          - Fn::Join:\n              - \"\"\n              - Ref: CloudFormationExecutionPolicies\n  HasCustomFileAssetsBucketName:\n    Fn::Not:\n      - Fn::Equals:\n          - \"\"\n          - Ref: FileAssetsBucketName\n  CreateNewKey:\n    Fn::Equals:\n      - \"\"\n      - Ref: FileAssetsBucketKmsKeyId\n  UseAwsManagedKey:\n    Fn::Equals:\n      - AWS_MANAGED_KEY\n      - Ref: FileAssetsBucketKmsKeyId\n  ShouldCreatePermissionsBoundary:\n    Fn::Equals:\n      - \"true\"\n      - Ref: UseExamplePermissionsBoundary\n  PermissionsBoundarySet:\n    Fn::Not:\n      - Fn::Equals:\n          - \"\"\n          - Ref: InputPermissionsBoundary\n  HasCustomContainerAssetsRepositoryName:\n    Fn::Not:\n      - Fn::Equals:\n          - \"\"\n          - Ref: ContainerAssetsRepositoryName\n  UsePublicAccessBlockConfiguration:\n    Fn::Equals:\n      - \"true\"\n      - Ref: PublicAccessBlockConfiguration\nResources:\n  FileAssetsBucketEncryptionKey:\n    Type: AWS::KMS::Key\n    Properties:\n      KeyPolicy:\n        Statement:\n          - Action:\n              - kms:Create*\n              - kms:Describe*\n              - kms:Enable*\n              - kms:List*\n              - kms:Put*\n              - kms:Update*\n              - kms:Revoke*\n              - kms:Disable*\n              - kms:Get*\n              - kms:Delete*\n              - kms:ScheduleKeyDeletion\n              - kms:CancelKeyDeletion\n              - kms:GenerateDataKey\n              - kms:TagResource\n              - kms:UntagResource\n            Effect: Allow\n            Principal:\n              AWS:\n                Ref: AWS::AccountId\n            Resource: \"*\"\n          - Action:\n              - kms:Decrypt\n              - kms:DescribeKey\n              - kms:Encrypt\n              - kms:ReEncrypt*\n              - kms:GenerateDataKey*\n            Effect: Allow\n            Principal:\n              AWS: \"*\"\n            Resource: \"*\"\n            Condition:\n              StringEquals:\n                kms:CallerAccount:\n                  Ref: AWS::AccountId\n                kms:ViaService:\n                  - Fn::Sub: s3.$${AWS::Region}.amazonaws.com\n          - Action:\n              - kms:Decrypt\n              - kms:DescribeKey\n              - kms:Encrypt\n              - kms:ReEncrypt*\n              - kms:GenerateDataKey*\n            Effect: Allow\n            Principal:\n              AWS:\n                Fn::Sub: ${FilePublishingRole.Arn}\n            Resource: \"*\"\n    Condition: CreateNewKey\n  FileAssetsBucketEncryptionKeyAlias:\n    Condition: CreateNewKey\n    Type: AWS::KMS::Alias\n    Properties:\n      AliasName:\n        Fn::Sub: alias/cdk-$${Qualifier}-assets-key\n      TargetKeyId:\n        Ref: FileAssetsBucketEncryptionKey\n  StagingBucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      BucketName:\n        Fn::If:\n          - HasCustomFileAssetsBucketName\n          - Fn::Sub: $${FileAssetsBucketName}\n          - Fn::Sub: cdk-$${Qualifier}-assets-$${AWS::AccountId}-$${AWS::Region}\n      AccessControl: Private\n      BucketEncryption:\n        ServerSideEncryptionConfiguration:\n          - ServerSideEncryptionByDefault:\n              SSEAlgorithm: aws:kms\n              KMSMasterKeyID:\n                Fn::If:\n                  - CreateNewKey\n                  - Fn::Sub: ${FileAssetsBucketEncryptionKey.Arn}\n                  - Fn::If:\n                      - UseAwsManagedKey\n                      - Ref: AWS::NoValue\n                      - Fn::Sub: $${FileAssetsBucketKmsKeyId}\n      PublicAccessBlockConfiguration:\n        Fn::If:\n          - UsePublicAccessBlockConfiguration\n          - BlockPublicAcls: true\n            BlockPublicPolicy: true\n            IgnorePublicAcls: true\n            RestrictPublicBuckets: true\n          - Ref: AWS::NoValue\n      VersioningConfiguration:\n        Status: Enabled\n      LifecycleConfiguration:\n        Rules:\n          - Id: CleanupOldVersions\n            Status: Enabled\n            NoncurrentVersionExpiration:\n              NoncurrentDays: 365\n    UpdateReplacePolicy: Retain\n    DeletionPolicy: Retain\n  StagingBucketPolicy:\n    Type: AWS::S3::BucketPolicy\n    Properties:\n      Bucket:\n        Ref: StagingBucket\n      PolicyDocument:\n        Id: AccessControl\n        Version: \"2012-10-17\"\n        Statement:\n          - Sid: AllowSSLRequestsOnly\n            Action: s3:*\n            Effect: Deny\n            Resource:\n              - Fn::Sub: ${StagingBucket.Arn}\n              - Fn::Sub: ${StagingBucket.Arn}/*\n            Condition:\n              Bool:\n                aws:SecureTransport: \"false\"\n            Principal: \"*\"\n  ContainerAssetsRepository:\n    Type: AWS::ECR::Repository\n    Properties:\n      ImageTagMutability: IMMUTABLE\n      LifecyclePolicy:\n        LifecyclePolicyText: |\n          {\n            \"rules\": [\n              {\n                \"rulePriority\": 1,\n                \"description\": \"Untagged images should not exist, but expire any older than one year\",\n                \"selection\": {\n                  \"tagStatus\": \"untagged\",\n                  \"countType\": \"sinceImagePushed\",\n                  \"countUnit\": \"days\",\n                  \"countNumber\": 365\n                },\n                \"action\": { \"type\": \"expire\" }\n              }\n            ]\n          }\n      RepositoryName:\n        Fn::If:\n          - HasCustomContainerAssetsRepositoryName\n          - Fn::Sub: $${ContainerAssetsRepositoryName}\n          - Fn::Sub: cdk-$${Qualifier}-container-assets-$${AWS::AccountId}-$${AWS::Region}\n      RepositoryPolicyText:\n        Version: \"2012-10-17\"\n        Statement:\n          - Sid: LambdaECRImageRetrievalPolicy\n            Effect: Allow\n            Principal:\n              Service: lambda.amazonaws.com\n            Action:\n              - ecr:BatchGetImage\n              - ecr:GetDownloadUrlForLayer\n            Condition:\n              StringLike:\n                aws:sourceArn:\n                  Fn::Sub: arn:$${AWS::Partition}:lambda:$${AWS::Region}:$${AWS::AccountId}:function:*\n  FilePublishingRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Statement:\n          - Action: sts:AssumeRole\n            Effect: Allow\n            Principal:\n              AWS:\n                Ref: AWS::AccountId\n          - Fn::If:\n              - HasTrustedAccounts\n              - Action: sts:AssumeRole\n                Effect: Allow\n                Principal:\n                  AWS:\n                    Ref: TrustedAccounts\n              - Ref: AWS::NoValue\n      RoleName:\n        Fn::Sub: cdk-$${Qualifier}-file-publishing-role-$${AWS::AccountId}-$${AWS::Region}\n      Tags:\n        - Key: aws-cdk:bootstrap-role\n          Value: file-publishing\n  ImagePublishingRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Statement:\n          - Action: sts:AssumeRole\n            Effect: Allow\n            Principal:\n              AWS:\n                Ref: AWS::AccountId\n          - Fn::If:\n              - HasTrustedAccounts\n              - Action: sts:AssumeRole\n                Effect: Allow\n                Principal:\n                  AWS:\n                    Ref: TrustedAccounts\n              - Ref: AWS::NoValue\n      RoleName:\n        Fn::Sub: cdk-$${Qualifier}-image-publishing-role-$${AWS::AccountId}-$${AWS::Region}\n      Tags:\n        - Key: aws-cdk:bootstrap-role\n          Value: image-publishing\n  LookupRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Statement:\n          - Action: sts:AssumeRole\n            Effect: Allow\n            Principal:\n              AWS:\n                Ref: AWS::AccountId\n          - Fn::If:\n              - HasTrustedAccountsForLookup\n              - Action: sts:AssumeRole\n                Effect: Allow\n                Principal:\n                  AWS:\n                    Ref: TrustedAccountsForLookup\n              - Ref: AWS::NoValue\n          - Fn::If:\n              - HasTrustedAccounts\n              - Action: sts:AssumeRole\n                Effect: Allow\n                Principal:\n                  AWS:\n                    Ref: TrustedAccounts\n              - Ref: AWS::NoValue\n      RoleName:\n        Fn::Sub: cdk-$${Qualifier}-lookup-role-$${AWS::AccountId}-$${AWS::Region}\n      ManagedPolicyArns:\n        - Fn::Sub: arn:$${AWS::Partition}:iam::aws:policy/ReadOnlyAccess\n      Policies:\n        - PolicyDocument:\n            Statement:\n              - Sid: DontReadSecrets\n                Effect: Deny\n                Action:\n                  - kms:Decrypt\n                Resource: \"*\"\n            Version: \"2012-10-17\"\n          PolicyName: LookupRolePolicy\n      Tags:\n        - Key: aws-cdk:bootstrap-role\n          Value: lookup\n  FilePublishingRoleDefaultPolicy:\n    Type: AWS::IAM::Policy\n    Properties:\n      PolicyDocument:\n        Statement:\n          - Action:\n              - s3:GetObject*\n              - s3:GetBucket*\n              - s3:GetEncryptionConfiguration\n              - s3:List*\n              - s3:DeleteObject*\n              - s3:PutObject*\n              - s3:Abort*\n            Resource:\n              - Fn::Sub: ${StagingBucket.Arn}\n              - Fn::Sub: ${StagingBucket.Arn}/*\n            Effect: Allow\n          - Action:\n              - kms:Decrypt\n              - kms:DescribeKey\n              - kms:Encrypt\n              - kms:ReEncrypt*\n              - kms:GenerateDataKey*\n            Effect: Allow\n            Resource:\n              Fn::If:\n                - CreateNewKey\n                - Fn::Sub: ${FileAssetsBucketEncryptionKey.Arn}\n                - Fn::Sub: arn:$${AWS::Partition}:kms:$${AWS::Region}:$${AWS::AccountId}:key/$${FileAssetsBucketKmsKeyId}\n        Version: \"2012-10-17\"\n      Roles:\n        - Ref: FilePublishingRole\n      PolicyName:\n        Fn::Sub: cdk-$${Qualifier}-file-publishing-role-default-policy-$${AWS::AccountId}-$${AWS::Region}\n  ImagePublishingRoleDefaultPolicy:\n    Type: AWS::IAM::Policy\n    Properties:\n      PolicyDocument:\n        Statement:\n          - Action:\n              - ecr:PutImage\n              - ecr:InitiateLayerUpload\n              - ecr:UploadLayerPart\n              - ecr:CompleteLayerUpload\n              - ecr:BatchCheckLayerAvailability\n              - ecr:DescribeRepositories\n              - ecr:DescribeImages\n              - ecr:BatchGetImage\n              - ecr:GetDownloadUrlForLayer\n            Resource:\n              Fn::Sub: ${ContainerAssetsRepository.Arn}\n            Effect: Allow\n          - Action:\n              - ecr:GetAuthorizationToken\n            Resource: \"*\"\n            Effect: Allow\n        Version: \"2012-10-17\"\n      Roles:\n        - Ref: ImagePublishingRole\n      PolicyName:\n        Fn::Sub: cdk-$${Qualifier}-image-publishing-role-default-policy-$${AWS::AccountId}-$${AWS::Region}\n  DeploymentActionRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Statement:\n          - Action: sts:AssumeRole\n            Effect: Allow\n            Principal:\n              AWS:\n                Ref: AWS::AccountId\n          - Fn::If:\n              - HasTrustedAccounts\n              - Action: sts:AssumeRole\n                Effect: Allow\n                Principal:\n                  AWS:\n                    Ref: TrustedAccounts\n              - Ref: AWS::NoValue\n      Policies:\n        - PolicyDocument:\n            Statement:\n              - Sid: CloudFormationPermissions\n                Effect: Allow\n                Action:\n                  - cloudformation:CreateChangeSet\n                  - cloudformation:DeleteChangeSet\n                  - cloudformation:DescribeChangeSet\n                  - cloudformation:DescribeStacks\n                  - cloudformation:ExecuteChangeSet\n                  - cloudformation:CreateStack\n                  - cloudformation:UpdateStack\n                Resource: \"*\"\n              - Sid: PipelineCrossAccountArtifactsBucket\n                Effect: Allow\n                Action:\n                  - s3:GetObject*\n                  - s3:GetBucket*\n                  - s3:List*\n                  - s3:Abort*\n                  - s3:DeleteObject*\n                  - s3:PutObject*\n                Resource: \"*\"\n                Condition:\n                  StringNotEquals:\n                    s3:ResourceAccount:\n                      Ref: AWS::AccountId\n              - Sid: PipelineCrossAccountArtifactsKey\n                Effect: Allow\n                Action:\n                  - kms:Decrypt\n                  - kms:DescribeKey\n                  - kms:Encrypt\n                  - kms:ReEncrypt*\n                  - kms:GenerateDataKey*\n                Resource: \"*\"\n                Condition:\n                  StringEquals:\n                    kms:ViaService:\n                      Fn::Sub: s3.$${AWS::Region}.amazonaws.com\n              - Action: iam:PassRole\n                Resource:\n                  Fn::Sub: ${CloudFormationExecutionRole.Arn}\n                Effect: Allow\n              - Sid: CliPermissions\n                Action:\n                  - cloudformation:DescribeStackEvents\n                  - cloudformation:GetTemplate\n                  - cloudformation:DeleteStack\n                  - cloudformation:UpdateTerminationProtection\n                  - sts:GetCallerIdentity\n                  - cloudformation:GetTemplateSummary\n                Resource: \"*\"\n                Effect: Allow\n              - Sid: CliStagingBucket\n                Effect: Allow\n                Action:\n                  - s3:GetObject*\n                  - s3:GetBucket*\n                  - s3:List*\n                Resource:\n                  - Fn::Sub: ${StagingBucket.Arn}\n                  - Fn::Sub: ${StagingBucket.Arn}/*\n              - Sid: ReadVersion\n                Effect: Allow\n                Action:\n                  - ssm:GetParameter\n                Resource:\n                  - Fn::Sub: arn:$${AWS::Partition}:ssm:$${AWS::Region}:$${AWS::AccountId}:parameter$${CdkBootstrapVersion}\n            Version: \"2012-10-17\"\n          PolicyName: default\n      RoleName:\n        Fn::Sub: cdk-$${Qualifier}-deploy-role-$${AWS::AccountId}-$${AWS::Region}\n      Tags:\n        - Key: aws-cdk:bootstrap-role\n          Value: deploy\n  CloudFormationExecutionRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Statement:\n          - Action: sts:AssumeRole\n            Effect: Allow\n            Principal:\n              Service: cloudformation.amazonaws.com\n        Version: \"2012-10-17\"\n      ManagedPolicyArns:\n        Fn::If:\n          - HasCloudFormationExecutionPolicies\n          - Ref: CloudFormationExecutionPolicies\n          - Fn::If:\n              - HasTrustedAccounts\n              - Ref: AWS::NoValue\n              - - Fn::Sub: arn:$${AWS::Partition}:iam::aws:policy/AdministratorAccess\n      RoleName:\n        Fn::Sub: cdk-$${Qualifier}-cfn-exec-role-$${AWS::AccountId}-$${AWS::Region}\n      PermissionsBoundary:\n        Fn::If:\n          - PermissionsBoundarySet\n          - Fn::Sub: arn:$${AWS::Partition}:iam::$${AWS::AccountId}:policy/$${InputPermissionsBoundary}\n          - Ref: AWS::NoValue\n  CdkBoostrapPermissionsBoundaryPolicy:\n    Condition: ShouldCreatePermissionsBoundary\n    Type: AWS::IAM::ManagedPolicy\n    Properties:\n      PolicyDocument:\n        Statement:\n          - Sid: ExplicitAllowAll\n            Action:\n              - \"*\"\n            Effect: Allow\n            Resource: \"*\"\n          - Sid: DenyAccessIfRequiredPermBoundaryIsNotBeingApplied\n            Action:\n              - iam:CreateUser\n              - iam:CreateRole\n              - iam:PutRolePermissionsBoundary\n              - iam:PutUserPermissionsBoundary\n            Condition:\n              StringNotEquals:\n                iam:PermissionsBoundary:\n                  Fn::Sub: arn:$${AWS::Partition}:iam::$${AWS::AccountId}:policy/cdk-$${Qualifier}-permissions-boundary-$${AWS::AccountId}-$${AWS::Region}\n            Effect: Deny\n            Resource: \"*\"\n          - Sid: DenyPermBoundaryIAMPolicyAlteration\n            Action:\n              - iam:CreatePolicyVersion\n              - iam:DeletePolicy\n              - iam:DeletePolicyVersion\n              - iam:SetDefaultPolicyVersion\n            Effect: Deny\n            Resource:\n              Fn::Sub: arn:$${AWS::Partition}:iam::$${AWS::AccountId}:policy/cdk-$${Qualifier}-permissions-boundary-$${AWS::AccountId}-$${AWS::Region}\n          - Sid: DenyRemovalOfPermBoundaryFromAnyUserOrRole\n            Action:\n              - iam:DeleteUserPermissionsBoundary\n              - iam:DeleteRolePermissionsBoundary\n            Effect: Deny\n            Resource: \"*\"\n        Version: \"2012-10-17\"\n      Description: Bootstrap Permission Boundary\n      ManagedPolicyName:\n        Fn::Sub: cdk-$${Qualifier}-permissions-boundary-$${AWS::AccountId}-$${AWS::Region}\n      Path: /\n  CdkBootstrapVersion:\n    Type: AWS::SSM::Parameter\n    Properties:\n      Type: String\n      Name:\n        Fn::Sub: /cdk-bootstrap/$${Qualifier}/version\n      Value: \"18\"\nOutputs:\n  BucketName:\n    Description: The name of the S3 bucket owned by the CDK toolkit stack\n    Value:\n      Fn::Sub: $${StagingBucket}\n  BucketDomainName:\n    Description: The domain name of the S3 bucket owned by the CDK toolkit stack\n    Value:\n      Fn::Sub: ${StagingBucket.RegionalDomainName}\n  FileAssetKeyArn:\n    Description: The ARN of the KMS key used to encrypt the asset bucket (deprecated)\n    Value:\n      Fn::If:\n        - CreateNewKey\n        - Fn::Sub: ${FileAssetsBucketEncryptionKey.Arn}\n        - Fn::Sub: $${FileAssetsBucketKmsKeyId}\n    Export:\n      Name:\n        Fn::Sub: CdkBootstrap-$${Qualifier}-FileAssetKeyArn\n  ImageRepositoryName:\n    Description: The name of the ECR repository which hosts docker image assets\n    Value:\n      Fn::Sub: $${ContainerAssetsRepository}\n  BootstrapVersion:\n    Description: The version of the bootstrap resources that are currently mastered in this stack\n    Value:\n      Fn::GetAtt:\n        - CdkBootstrapVersion\n        - Value\n"
  timeout_in_minutes = "0"
}

resource "aws_cloudformation_stack" "tfer--ECS-Console-V2-Service-portfolio-webservice-portfolio-02c5aad5" {
  capabilities       = ["CAPABILITY_NAMED_IAM"]
  disable_rollback   = "false"
  name               = "ECS-Console-V2-Service-portfolio-webservice-portfolio-02c5aad5"
  template_body      = "{\"AWSTemplateFormatVersion\":\"2010-09-09\",\"Description\":\"The template used to create an ECS Service from the ECS Console.\",\"Outputs\":{\"ClusterName\":{\"Description\":\"The cluster used to create the service.\",\"Value\":{\"Ref\":\"ECSClusterName\"}},\"ECSService\":{\"Description\":\"The created service.\",\"Value\":{\"Ref\":\"ECSService\"}}},\"Parameters\":{\"ECSClusterName\":{\"Default\":\"portfolio\",\"Type\":\"String\"},\"ECSServiceName\":{\"Default\":\"portfolio-webservice\",\"Type\":\"String\"},\"LoadBalancerName\":{\"Default\":\"\",\"Type\":\"String\"},\"SecurityGroupIDs\":{\"Default\":\"sg-09dae8540e936c26f\",\"Type\":\"CommaDelimitedList\"},\"SubnetIDs\":{\"Default\":\"\",\"Type\":\"CommaDelimitedList\"},\"VpcID\":{\"Default\":\"vpc-0d7f4ae74a37b0241\",\"Type\":\"String\"}},\"Resources\":{\"ECSService\":{\"Properties\":{\"Cluster\":\"portfolio\",\"DeploymentConfiguration\":{\"DeploymentCircuitBreaker\":{\"Enable\":true,\"Rollback\":true},\"MaximumPercent\":200,\"MinimumHealthyPercent\":100},\"DeploymentController\":{\"Type\":\"ECS\"},\"DesiredCount\":1,\"EnableECSManagedTags\":true,\"LaunchType\":\"EC2\",\"PlacementConstraints\":[],\"PlacementStrategies\":[{\"Field\":\"attribute:ecs.availability-zone\",\"Type\":\"spread\"},{\"Field\":\"instanceId\",\"Type\":\"spread\"}],\"SchedulingStrategy\":\"REPLICA\",\"ServiceConnectConfiguration\":{\"Enabled\":false},\"ServiceName\":\"portfolio-webservice\",\"Tags\":[],\"TaskDefinition\":\"arn:aws:ecs:ap-southeast-1:662502049608:task-definition/portfolio-webservice:3\"},\"Type\":\"AWS::ECS::Service\"}}}"
  timeout_in_minutes = "0"
}

resource "aws_cloudformation_stack" "tfer--Infra-ECS-Cluster-portfolio-5f1a041a" {
  capabilities       = ["CAPABILITY_NAMED_IAM"]
  disable_rollback   = "false"
  name               = "Infra-ECS-Cluster-portfolio-5f1a041a"
  template_body      = "{\"AWSTemplateFormatVersion\":\"2010-09-09\",\"Description\":\"The template used to create an ECS Cluster from the ECS Console.\",\"Outputs\":{\"ECSCluster\":{\"Description\":\"The created cluster.\",\"Value\":{\"Ref\":\"ECSCluster\"}}},\"Parameters\":{\"ECSClusterName\":{\"Default\":\"portfolio\",\"Description\":\"Specifies the ECS Cluster Name with which the resources would be associated\",\"Type\":\"String\"},\"IamRoleInstanceProfile\":{\"Default\":\"arn:aws:iam::662502049608:instance-profile/ecsInstanceRole\",\"Description\":\"Specifies the Name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance\",\"Type\":\"String\"},\"LatestECSOptimizedAMI\":{\"Default\":\"/aws/service/ecs/optimized-ami/amazon-linux-2/kernel-5.10/recommended/image_id\",\"Description\":\"AMI ID\",\"Type\":\"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\"},\"SecurityGroupIds\":{\"Default\":\"\",\"Description\":\"Optional - Specifies the Comma separated list of the Security Group Id of an existing Security Group.\",\"Type\":\"CommaDelimitedList\"},\"SubnetIds\":{\"Default\":\"\",\"Description\":\"Optional - Specifies the Comma separated list of existing VPC Subnet Ids where ECS instances will run\",\"Type\":\"CommaDelimitedList\"},\"VpcId\":{\"AllowedPattern\":\"^(?:vpc-[0-9a-f]{8,17}|)$\",\"ConstraintDescription\":\"VPC Id must begin with 'vpc-' and have a valid uuid\",\"Default\":\"\",\"Description\":\"Optional - Specifies the ID of an existing VPC in which to launch your container instances. If you specify a VPC ID, you must specify a list of existing subnets in that VPC. If you do not specify a VPC ID, a new VPC is created with at least 1 subnet.\",\"Type\":\"String\"}},\"Resources\":{\"ClusterCPAssociation\":{\"DependsOn\":\"ECSCluster\",\"Properties\":{\"CapacityProviders\":[{\"Ref\":\"EC2CapacityProvider\"}],\"Cluster\":{\"Ref\":\"ECSClusterName\"},\"DefaultCapacityProviderStrategy\":[{\"Base\":0,\"CapacityProvider\":{\"Ref\":\"EC2CapacityProvider\"},\"Weight\":1}]},\"Type\":\"AWS::ECS::ClusterCapacityProviderAssociations\"},\"EC2CapacityProvider\":{\"Properties\":{\"AutoScalingGroupProvider\":{\"AutoScalingGroupArn\":{\"Ref\":\"ECSAutoScalingGroup\"},\"ManagedScaling\":{\"Status\":\"ENABLED\",\"TargetCapacity\":100},\"ManagedTerminationProtection\":\"DISABLED\"}},\"Type\":\"AWS::ECS::CapacityProvider\"},\"ECSAutoScalingGroup\":{\"DependsOn\":\"ECSCluster\",\"Properties\":{\"DesiredCapacity\":\"1\",\"LaunchTemplate\":{\"LaunchTemplateId\":{\"Ref\":\"ECSLaunchTemplate\"},\"Version\":{\"Fn::GetAtt\":[\"ECSLaunchTemplate\",\"LatestVersionNumber\"]}},\"MaxSize\":\"2\",\"MinSize\":\"1\",\"Tags\":[{\"Key\":\"Name\",\"PropagateAtLaunch\":true,\"Value\":{\"Fn::Join\":[\" - \",[\"ECS Instance\",{\"Ref\":\"ECSClusterName\"}]]}}],\"VPCZoneIdentifier\":{\"Ref\":\"SubnetIds\"}},\"Type\":\"AWS::AutoScaling::AutoScalingGroup\"},\"ECSCluster\":{\"Properties\":{\"ClusterName\":{\"Ref\":\"ECSClusterName\"},\"ClusterSettings\":[{\"Name\":\"containerInsights\",\"Value\":\"disabled\"}],\"Configuration\":{\"ExecuteCommandConfiguration\":{\"Logging\":\"DEFAULT\"}},\"ServiceConnectDefaults\":{\"Namespace\":\"portfolio\"},\"Tags\":[]},\"Type\":\"AWS::ECS::Cluster\"},\"ECSLaunchTemplate\":{\"DependsOn\":\"ECSCluster\",\"Properties\":{\"LaunchTemplateData\":{\"IamInstanceProfile\":{\"Arn\":{\"Ref\":\"IamRoleInstanceProfile\"}},\"ImageId\":{\"Ref\":\"LatestECSOptimizedAMI\"},\"InstanceType\":\"t2.small\",\"KeyName\":\"portfolio-key\",\"NetworkInterfaces\":[{\"AssociatePublicIpAddress\":true,\"DeleteOnTermination\":true,\"DeviceIndex\":0,\"Groups\":{\"Ref\":\"SecurityGroupIds\"}}],\"UserData\":{\"Fn::Base64\":{\"Fn::Sub\":[\"#!/bin/bash \\necho ECS_CLUSTER=$${ClusterName} >> /etc/ecs/ecs.config;\",{\"ClusterName\":{\"Ref\":\"ECSClusterName\"}}]}}}},\"Type\":\"AWS::EC2::LaunchTemplate\"}}}"
  timeout_in_minutes = "0"
}

resource "aws_cloudformation_stack" "tfer--InfrastructureStack" {
  capabilities       = ["CAPABILITY_AUTO_EXPAND", "CAPABILITY_IAM", "CAPABILITY_NAMED_IAM"]
  disable_rollback   = "false"
  iam_role_arn       = "arn:aws:iam::662502049608:role/cdk-hnb659fds-cfn-exec-role-662502049608-ap-southeast-1"
  name               = "InfrastructureStack"
  template_body      = "{\"Conditions\":{\"CDKMetadataAvailable\":{\"Fn::Or\":[{\"Fn::Or\":[{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"af-south-1\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"ap-east-1\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"ap-northeast-1\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"ap-northeast-2\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"ap-south-1\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"ap-southeast-1\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"ap-southeast-2\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"ca-central-1\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"cn-north-1\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"cn-northwest-1\"]}]},{\"Fn::Or\":[{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"eu-central-1\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"eu-north-1\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"eu-south-1\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"eu-west-1\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"eu-west-2\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"eu-west-3\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"me-south-1\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"sa-east-1\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"us-east-1\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"us-east-2\"]}]},{\"Fn::Or\":[{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"us-west-1\"]},{\"Fn::Equals\":[{\"Ref\":\"AWS::Region\"},\"us-west-2\"]}]}]}},\"Parameters\":{\"BootstrapVersion\":{\"Default\":\"/cdk-bootstrap/hnb659fds/version\",\"Description\":\"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\",\"Type\":\"AWS::SSM::Parameter::Value<String>\"}},\"Resources\":{\"CDKMetadata\":{\"Condition\":\"CDKMetadataAvailable\",\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/CDKMetadata/Default\"},\"Properties\":{\"Analytics\":\"v2:deflate64:H4sIAAAAAAAA/21Sy27bMBD8Ft9pxk6ANMc6DoIECNpAKdqjQZEbdW2KFLiUDYHQv5cPWXaAnmZ2OZrljnjLH77xsFqIEy2lOiw11jx8eCEPLLZ2ge54eOzlATzbfpqJFXi3GuVwaU91KR4FwcjUYERrVbT8JWoNSZvJyLRoayV2xirYE/+R4bk30qM1DEXLQ2XLBxkvswobGd3tgiACT3yTgCnotB1aMJ6XKzzNjfM4HqLBPCWZgWuRaKrexADuN7hcf6BpNHh70Z9JdLMN8TfbVOCjezoTHTbCw0kMx9s8ZdNhsoxJNnmLV+OhceI8uLK9jylIbXv16Wy8c/jpsEGzkRKIXlXy9XnhbdI8J83/FfPxH6ifkLzDuj+Pua7HkW178ratgGzvZAl35l+O3p09ogLHcrRpiZgGm8XTz9Mpr118JlIj35xoqzFHmG9tjcKS1mopdPdX8NXi+/TKbhJeRzYpwov3XUouYYkusRxWZlcpxnXS4+F7ujmuH/j6nq8Xe0Jcuj4G0wKvCv4DE0lwbeECAAA=\"},\"Type\":\"AWS::CDK::Metadata\"},\"CreateTodoServiceE4392CFC\":{\"DependsOn\":[\"CreateTodoServiceServiceRoleDefaultPolicyFAC435DF\",\"CreateTodoServiceServiceRoleA96BA878\"],\"Metadata\":{\"aws:asset:is-bundled\":true,\"aws:asset:path\":\"asset.3079bfe622d096278c481fc8dd25222d630c446eaa1328a42775f97e83f049c3\",\"aws:asset:property\":\"Code\",\"aws:cdk:path\":\"InfrastructureStack/CreateTodoService/Resource\"},\"Properties\":{\"Code\":{\"S3Bucket\":{\"Fn::Sub\":\"cdk-hnb659fds-assets-$${AWS::AccountId}-$${AWS::Region}\"},\"S3Key\":\"3079bfe622d096278c481fc8dd25222d630c446eaa1328a42775f97e83f049c3.zip\"},\"Environment\":{\"Variables\":{\"AWS_NODEJS_CONNECTION_REUSE_ENABLED\":\"1\",\"DYNAMO_DB_TABLE\":{\"Ref\":\"DatabaseTodoTable3E2AC78E\"}}},\"Handler\":\"index.createTodo\",\"Role\":{\"Fn::GetAtt\":[\"CreateTodoServiceServiceRoleA96BA878\",\"Arn\"]},\"Runtime\":\"nodejs14.x\",\"TracingConfig\":{\"Mode\":\"Active\"}},\"Type\":\"AWS::Lambda::Function\"},\"CreateTodoServiceLogRetentionC7564777\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/CreateTodoService/LogRetention/Resource\"},\"Properties\":{\"LogGroupName\":{\"Fn::Join\":[\"\",[\"/aws/lambda/\",{\"Ref\":\"CreateTodoServiceE4392CFC\"}]]},\"RetentionInDays\":1,\"ServiceToken\":{\"Fn::GetAtt\":[\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\",\"Arn\"]}},\"Type\":\"Custom::LogRetention\"},\"CreateTodoServiceServiceRoleA96BA878\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/CreateTodoService/ServiceRole/Resource\"},\"Properties\":{\"AssumeRolePolicyDocument\":{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"},\"ManagedPolicyArns\":[{\"Fn::Join\":[\"\",[\"arn:\",{\"Ref\":\"AWS::Partition\"},\":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]},\"Type\":\"AWS::IAM::Role\"},\"CreateTodoServiceServiceRoleDefaultPolicyFAC435DF\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/CreateTodoService/ServiceRole/DefaultPolicy/Resource\"},\"Properties\":{\"PolicyDocument\":{\"Statement\":[{\"Action\":[\"xray:PutTelemetryRecords\",\"xray:PutTraceSegments\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"dynamodb:BatchGetItem\",\"dynamodb:BatchWriteItem\",\"dynamodb:ConditionCheckItem\",\"dynamodb:DeleteItem\",\"dynamodb:DescribeTable\",\"dynamodb:GetItem\",\"dynamodb:GetRecords\",\"dynamodb:GetShardIterator\",\"dynamodb:PutItem\",\"dynamodb:Query\",\"dynamodb:Scan\",\"dynamodb:UpdateItem\"],\"Effect\":\"Allow\",\"Resource\":[{\"Fn::GetAtt\":[\"DatabaseTodoTable3E2AC78E\",\"Arn\"]},{\"Fn::Join\":[\"\",[{\"Fn::GetAtt\":[\"DatabaseTodoTable3E2AC78E\",\"Arn\"]},\"/index/*\"]]}]}],\"Version\":\"2012-10-17\"},\"PolicyName\":\"CreateTodoServiceServiceRoleDefaultPolicyFAC435DF\",\"Roles\":[{\"Ref\":\"CreateTodoServiceServiceRoleA96BA878\"}]},\"Type\":\"AWS::IAM::Policy\"},\"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536\":{\"DependsOn\":[\"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF\",\"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265\"],\"Metadata\":{\"aws:asset:is-bundled\":false,\"aws:asset:path\":\"asset.9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd\",\"aws:asset:property\":\"Code\",\"aws:cdk:path\":\"InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource\"},\"Properties\":{\"Code\":{\"S3Bucket\":{\"Fn::Sub\":\"cdk-hnb659fds-assets-$${AWS::AccountId}-$${AWS::Region}\"},\"S3Key\":\"9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd.zip\"},\"Environment\":{\"Variables\":{\"AWS_CA_BUNDLE\":\"/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem\"}},\"Handler\":\"index.handler\",\"Layers\":[{\"Ref\":\"DeployWebsiteAwsCliLayer17DBC421\"}],\"Role\":{\"Fn::GetAtt\":[\"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265\",\"Arn\"]},\"Runtime\":\"python3.9\",\"Timeout\":900},\"Type\":\"AWS::Lambda::Function\"},\"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource\"},\"Properties\":{\"AssumeRolePolicyDocument\":{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"},\"ManagedPolicyArns\":[{\"Fn::Join\":[\"\",[\"arn:\",{\"Ref\":\"AWS::Partition\"},\":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]},\"Type\":\"AWS::IAM::Role\"},\"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource\"},\"Properties\":{\"PolicyDocument\":{\"Statement\":[{\"Action\":[\"s3:GetBucket*\",\"s3:GetObject*\",\"s3:List*\"],\"Effect\":\"Allow\",\"Resource\":[{\"Fn::Join\":[\"\",[\"arn:\",{\"Ref\":\"AWS::Partition\"},\":s3:::\",{\"Fn::Sub\":\"cdk-hnb659fds-assets-$${AWS::AccountId}-$${AWS::Region}\"},\"/*\"]]},{\"Fn::Join\":[\"\",[\"arn:\",{\"Ref\":\"AWS::Partition\"},\":s3:::\",{\"Fn::Sub\":\"cdk-hnb659fds-assets-$${AWS::AccountId}-$${AWS::Region}\"}]]}]},{\"Action\":[\"s3:Abort*\",\"s3:DeleteObject*\",\"s3:GetBucket*\",\"s3:GetObject*\",\"s3:List*\",\"s3:PutObject\",\"s3:PutObjectLegalHold\",\"s3:PutObjectRetention\",\"s3:PutObjectTagging\",\"s3:PutObjectVersionTagging\"],\"Effect\":\"Allow\",\"Resource\":[{\"Fn::GetAtt\":[\"WebappBucket620531E5\",\"Arn\"]},{\"Fn::Join\":[\"\",[{\"Fn::GetAtt\":[\"WebappBucket620531E5\",\"Arn\"]},\"/*\"]]}]},{\"Action\":[\"cloudfront:CreateInvalidation\",\"cloudfront:GetInvalidation\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"},\"PolicyName\":\"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF\",\"Roles\":[{\"Ref\":\"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265\"}]},\"Type\":\"AWS::IAM::Policy\"},\"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\":{\"DependsOn\":[\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\"],\"Metadata\":{\"aws:asset:path\":\"asset.d28a3fa64d0bd6c7c6f1d6fd707d3e6dc5c81fe8f47891b89459b6492586997f\",\"aws:asset:property\":\"Code\",\"aws:cdk:path\":\"InfrastructureStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler\"},\"Properties\":{\"Code\":{\"S3Bucket\":{\"Fn::Sub\":\"cdk-hnb659fds-assets-$${AWS::AccountId}-$${AWS::Region}\"},\"S3Key\":\"d28a3fa64d0bd6c7c6f1d6fd707d3e6dc5c81fe8f47891b89459b6492586997f.zip\"},\"Description\":{\"Fn::Join\":[\"\",[\"Lambda function for auto-deleting objects in \",{\"Ref\":\"WebappBucket620531E5\"},\" S3 bucket.\"]]},\"Handler\":\"index.handler\",\"MemorySize\":128,\"Role\":{\"Fn::GetAtt\":[\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\",\"Arn\"]},\"Runtime\":\"nodejs18.x\",\"Timeout\":900},\"Type\":\"AWS::Lambda::Function\"},\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role\"},\"Properties\":{\"AssumeRolePolicyDocument\":{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"},\"ManagedPolicyArns\":[{\"Fn::Sub\":\"arn:$${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"}]},\"Type\":\"AWS::IAM::Role\"},\"DatabaseTodoTable3E2AC78E\":{\"DeletionPolicy\":\"Retain\",\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/Database/TodoTable/Resource\"},\"Properties\":{\"AttributeDefinitions\":[{\"AttributeName\":\"PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"SK\",\"AttributeType\":\"S\"}],\"BillingMode\":\"PAY_PER_REQUEST\",\"GlobalSecondaryIndexes\":[{\"IndexName\":\"GSI1\",\"KeySchema\":[{\"AttributeName\":\"SK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"PK\",\"KeyType\":\"RANGE\"}],\"Projection\":{\"NonKeyAttributes\":[\"Title\",\"Status\",\"CreatedDate\"],\"ProjectionType\":\"INCLUDE\"}}],\"KeySchema\":[{\"AttributeName\":\"PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"SK\",\"KeyType\":\"RANGE\"}]},\"Type\":\"AWS::DynamoDB::Table\",\"UpdateReplacePolicy\":\"Retain\"},\"DeployWebsiteAwsCliLayer17DBC421\":{\"Metadata\":{\"aws:asset:is-bundled\":false,\"aws:asset:path\":\"asset.e2277687077a2abf9ae1af1cc9565e6715e2ebb62f79ec53aa75a1af9298f642.zip\",\"aws:asset:property\":\"Content\",\"aws:cdk:path\":\"InfrastructureStack/DeployWebsite/AwsCliLayer/Resource\"},\"Properties\":{\"Content\":{\"S3Bucket\":{\"Fn::Sub\":\"cdk-hnb659fds-assets-$${AWS::AccountId}-$${AWS::Region}\"},\"S3Key\":\"e2277687077a2abf9ae1af1cc9565e6715e2ebb62f79ec53aa75a1af9298f642.zip\"},\"Description\":\"/opt/awscli/aws\"},\"Type\":\"AWS::Lambda::LayerVersion\"},\"DeployWebsiteCustomResourceD116527B\":{\"DeletionPolicy\":\"Delete\",\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/DeployWebsite/CustomResource/Default\"},\"Properties\":{\"DestinationBucketName\":{\"Ref\":\"WebappBucket620531E5\"},\"DistributionId\":{\"Ref\":\"MyCloudFrontWebDistributionCFDistribution003008CF\"},\"DistributionPaths\":[\"/*\"],\"Prune\":true,\"ServiceToken\":{\"Fn::GetAtt\":[\"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536\",\"Arn\"]},\"SourceBucketNames\":[{\"Fn::Sub\":\"cdk-hnb659fds-assets-$${AWS::AccountId}-$${AWS::Region}\"}],\"SourceObjectKeys\":[\"ffafe300f3562383ee603ea9418859d861fe7a4b0b25867961df0b6ccb3bc06c.zip\"]},\"Type\":\"Custom::CDKBucketDeployment\",\"UpdateReplacePolicy\":\"Delete\"},\"GetListTodoService03ADE1C9\":{\"DependsOn\":[\"GetListTodoServiceServiceRoleDefaultPolicyAEE368FE\",\"GetListTodoServiceServiceRole1D618180\"],\"Metadata\":{\"aws:asset:is-bundled\":true,\"aws:asset:path\":\"asset.3079bfe622d096278c481fc8dd25222d630c446eaa1328a42775f97e83f049c3\",\"aws:asset:property\":\"Code\",\"aws:cdk:path\":\"InfrastructureStack/GetListTodoService/Resource\"},\"Properties\":{\"Code\":{\"S3Bucket\":{\"Fn::Sub\":\"cdk-hnb659fds-assets-$${AWS::AccountId}-$${AWS::Region}\"},\"S3Key\":\"3079bfe622d096278c481fc8dd25222d630c446eaa1328a42775f97e83f049c3.zip\"},\"Environment\":{\"Variables\":{\"AWS_NODEJS_CONNECTION_REUSE_ENABLED\":\"1\",\"DYNAMO_DB_TABLE\":{\"Ref\":\"DatabaseTodoTable3E2AC78E\"}}},\"Handler\":\"index.getListTodo\",\"Role\":{\"Fn::GetAtt\":[\"GetListTodoServiceServiceRole1D618180\",\"Arn\"]},\"Runtime\":\"nodejs14.x\",\"TracingConfig\":{\"Mode\":\"Active\"}},\"Type\":\"AWS::Lambda::Function\"},\"GetListTodoServiceLogRetention842357B3\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/GetListTodoService/LogRetention/Resource\"},\"Properties\":{\"LogGroupName\":{\"Fn::Join\":[\"\",[\"/aws/lambda/\",{\"Ref\":\"GetListTodoService03ADE1C9\"}]]},\"RetentionInDays\":1,\"ServiceToken\":{\"Fn::GetAtt\":[\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\",\"Arn\"]}},\"Type\":\"Custom::LogRetention\"},\"GetListTodoServiceServiceRole1D618180\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/GetListTodoService/ServiceRole/Resource\"},\"Properties\":{\"AssumeRolePolicyDocument\":{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"},\"ManagedPolicyArns\":[{\"Fn::Join\":[\"\",[\"arn:\",{\"Ref\":\"AWS::Partition\"},\":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]},\"Type\":\"AWS::IAM::Role\"},\"GetListTodoServiceServiceRoleDefaultPolicyAEE368FE\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/GetListTodoService/ServiceRole/DefaultPolicy/Resource\"},\"Properties\":{\"PolicyDocument\":{\"Statement\":[{\"Action\":[\"xray:PutTelemetryRecords\",\"xray:PutTraceSegments\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"dynamodb:BatchGetItem\",\"dynamodb:BatchWriteItem\",\"dynamodb:ConditionCheckItem\",\"dynamodb:DeleteItem\",\"dynamodb:DescribeTable\",\"dynamodb:GetItem\",\"dynamodb:GetRecords\",\"dynamodb:GetShardIterator\",\"dynamodb:PutItem\",\"dynamodb:Query\",\"dynamodb:Scan\",\"dynamodb:UpdateItem\"],\"Effect\":\"Allow\",\"Resource\":[{\"Fn::GetAtt\":[\"DatabaseTodoTable3E2AC78E\",\"Arn\"]},{\"Fn::Join\":[\"\",[{\"Fn::GetAtt\":[\"DatabaseTodoTable3E2AC78E\",\"Arn\"]},\"/index/*\"]]}]}],\"Version\":\"2012-10-17\"},\"PolicyName\":\"GetListTodoServiceServiceRoleDefaultPolicyAEE368FE\",\"Roles\":[{\"Ref\":\"GetListTodoServiceServiceRole1D618180\"}]},\"Type\":\"AWS::IAM::Policy\"},\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\":{\"DependsOn\":[\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\",\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\"],\"Metadata\":{\"aws:asset:is-bundled\":false,\"aws:asset:path\":\"asset.5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8\",\"aws:asset:property\":\"Code\",\"aws:cdk:path\":\"InfrastructureStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource\"},\"Properties\":{\"Code\":{\"S3Bucket\":{\"Fn::Sub\":\"cdk-hnb659fds-assets-$${AWS::AccountId}-$${AWS::Region}\"},\"S3Key\":\"5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8.zip\"},\"Handler\":\"index.handler\",\"Role\":{\"Fn::GetAtt\":[\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\",\"Arn\"]},\"Runtime\":\"nodejs16.x\"},\"Type\":\"AWS::Lambda::Function\"},\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource\"},\"Properties\":{\"AssumeRolePolicyDocument\":{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"},\"ManagedPolicyArns\":[{\"Fn::Join\":[\"\",[\"arn:\",{\"Ref\":\"AWS::Partition\"},\":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]},\"Type\":\"AWS::IAM::Role\"},\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource\"},\"Properties\":{\"PolicyDocument\":{\"Statement\":[{\"Action\":[\"logs:DeleteRetentionPolicy\",\"logs:PutRetentionPolicy\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"},\"PolicyName\":\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\",\"Roles\":[{\"Ref\":\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\"}]},\"Type\":\"AWS::IAM::Policy\"},\"MyCloudFrontWebDistributionCFDistribution003008CF\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/MyCloudFrontWebDistribution/CFDistribution\"},\"Properties\":{\"DistributionConfig\":{\"DefaultCacheBehavior\":{\"AllowedMethods\":[\"GET\",\"HEAD\"],\"CachedMethods\":[\"GET\",\"HEAD\"],\"Compress\":true,\"ForwardedValues\":{\"Cookies\":{\"Forward\":\"none\"},\"QueryString\":false},\"TargetOriginId\":\"origin1\",\"ViewerProtocolPolicy\":\"redirect-to-https\"},\"DefaultRootObject\":\"index.html\",\"Enabled\":true,\"HttpVersion\":\"http2\",\"IPV6Enabled\":true,\"Origins\":[{\"ConnectionAttempts\":3,\"ConnectionTimeout\":10,\"DomainName\":{\"Fn::GetAtt\":[\"WebappBucket620531E5\",\"RegionalDomainName\"]},\"Id\":\"origin1\",\"S3OriginConfig\":{\"OriginAccessIdentity\":{\"Fn::Join\":[\"\",[\"origin-access-identity/cloudfront/\",{\"Ref\":\"MyOriginAccessIdentity96ED0331\"}]]}}}],\"PriceClass\":\"PriceClass_200\",\"ViewerCertificate\":{\"CloudFrontDefaultCertificate\":true}}},\"Type\":\"AWS::CloudFront::Distribution\"},\"MyOriginAccessIdentity96ED0331\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/MyOriginAccessIdentity/Resource\"},\"Properties\":{\"CloudFrontOriginAccessIdentityConfig\":{\"Comment\":\"Allows CloudFront to reach the bucket\"}},\"Type\":\"AWS::CloudFront::CloudFrontOriginAccessIdentity\"},\"TodoAPIHttpProxyApi857EF4CE\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/TodoAPI/HttpProxyApi/Resource\"},\"Properties\":{\"CorsConfiguration\":{\"AllowCredentials\":true,\"AllowHeaders\":[\"Authorization\",\"Content-Type\",\"*\"],\"AllowMethods\":[\"GET\",\"POST\",\"DELETE\",\"PUT\",\"PATCH\"],\"AllowOrigins\":[\"http://localhost:3000\",\"https://*\"],\"MaxAge\":864000},\"Name\":\"todo-api\",\"ProtocolType\":\"HTTP\"},\"Type\":\"AWS::ApiGatewayV2::Api\"},\"TodoAPIHttpProxyApiDefaultStageB26EB842\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/TodoAPI/HttpProxyApi/DefaultStage/Resource\"},\"Properties\":{\"ApiId\":{\"Ref\":\"TodoAPIHttpProxyApi857EF4CE\"},\"AutoDeploy\":true,\"StageName\":\"$default\"},\"Type\":\"AWS::ApiGatewayV2::Stage\"},\"TodoAPIHttpProxyApiGETtodogettodolist1E681121\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/TodoAPI/HttpProxyApi/GET--todo--get-todo-list/Resource\"},\"Properties\":{\"ApiId\":{\"Ref\":\"TodoAPIHttpProxyApi857EF4CE\"},\"AuthorizationType\":\"NONE\",\"RouteKey\":\"GET /todo/get-todo-list\",\"Target\":{\"Fn::Join\":[\"\",[\"integrations/\",{\"Ref\":\"TodoAPIHttpProxyApiGETtodogettodolistGetListTodoIntegrationA2C94592\"}]]}},\"Type\":\"AWS::ApiGatewayV2::Route\"},\"TodoAPIHttpProxyApiGETtodogettodolistGetListTodoIntegrationA2C94592\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/TodoAPI/HttpProxyApi/GET--todo--get-todo-list/GetListTodoIntegration/Resource\"},\"Properties\":{\"ApiId\":{\"Ref\":\"TodoAPIHttpProxyApi857EF4CE\"},\"IntegrationType\":\"AWS_PROXY\",\"IntegrationUri\":{\"Fn::GetAtt\":[\"GetListTodoService03ADE1C9\",\"Arn\"]},\"PayloadFormatVersion\":\"2.0\"},\"Type\":\"AWS::ApiGatewayV2::Integration\"},\"TodoAPIHttpProxyApiGETtodogettodolistGetListTodoIntegrationPermissionEDA4ED4D\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/TodoAPI/HttpProxyApi/GET--todo--get-todo-list/GetListTodoIntegration-Permission\"},\"Properties\":{\"Action\":\"lambda:InvokeFunction\",\"FunctionName\":{\"Fn::GetAtt\":[\"GetListTodoService03ADE1C9\",\"Arn\"]},\"Principal\":\"apigateway.amazonaws.com\",\"SourceArn\":{\"Fn::Join\":[\"\",[\"arn:\",{\"Ref\":\"AWS::Partition\"},\":execute-api:\",{\"Ref\":\"AWS::Region\"},\":\",{\"Ref\":\"AWS::AccountId\"},\":\",{\"Ref\":\"TodoAPIHttpProxyApi857EF4CE\"},\"/*/*/todo/get-todo-list\"]]}},\"Type\":\"AWS::Lambda::Permission\"},\"TodoAPIHttpProxyApiPATCHtodoupdateid72F41C02\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/TodoAPI/HttpProxyApi/PATCH--todo--update--{id}/Resource\"},\"Properties\":{\"ApiId\":{\"Ref\":\"TodoAPIHttpProxyApi857EF4CE\"},\"AuthorizationType\":\"NONE\",\"RouteKey\":\"PATCH /todo/update/{id}\",\"Target\":{\"Fn::Join\":[\"\",[\"integrations/\",{\"Ref\":\"TodoAPIHttpProxyApiPATCHtodoupdateidUpdateTodoIntegration47D7536A\"}]]}},\"Type\":\"AWS::ApiGatewayV2::Route\"},\"TodoAPIHttpProxyApiPATCHtodoupdateidUpdateTodoIntegration47D7536A\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/TodoAPI/HttpProxyApi/PATCH--todo--update--{id}/UpdateTodoIntegration/Resource\"},\"Properties\":{\"ApiId\":{\"Ref\":\"TodoAPIHttpProxyApi857EF4CE\"},\"IntegrationType\":\"AWS_PROXY\",\"IntegrationUri\":{\"Fn::GetAtt\":[\"UpdateTodoServiceB8A1B2FD\",\"Arn\"]},\"PayloadFormatVersion\":\"2.0\"},\"Type\":\"AWS::ApiGatewayV2::Integration\"},\"TodoAPIHttpProxyApiPATCHtodoupdateidUpdateTodoIntegrationPermissionCB4CD2D8\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/TodoAPI/HttpProxyApi/PATCH--todo--update--{id}/UpdateTodoIntegration-Permission\"},\"Properties\":{\"Action\":\"lambda:InvokeFunction\",\"FunctionName\":{\"Fn::GetAtt\":[\"UpdateTodoServiceB8A1B2FD\",\"Arn\"]},\"Principal\":\"apigateway.amazonaws.com\",\"SourceArn\":{\"Fn::Join\":[\"\",[\"arn:\",{\"Ref\":\"AWS::Partition\"},\":execute-api:\",{\"Ref\":\"AWS::Region\"},\":\",{\"Ref\":\"AWS::AccountId\"},\":\",{\"Ref\":\"TodoAPIHttpProxyApi857EF4CE\"},\"/*/*/todo/update/{id}\"]]}},\"Type\":\"AWS::Lambda::Permission\"},\"TodoAPIHttpProxyApiPOSTtodocreateC7A62871\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/TodoAPI/HttpProxyApi/POST--todo--create/Resource\"},\"Properties\":{\"ApiId\":{\"Ref\":\"TodoAPIHttpProxyApi857EF4CE\"},\"AuthorizationType\":\"NONE\",\"RouteKey\":\"POST /todo/create\",\"Target\":{\"Fn::Join\":[\"\",[\"integrations/\",{\"Ref\":\"TodoAPIHttpProxyApiPOSTtodocreateCreateTodoIntegrationFA117612\"}]]}},\"Type\":\"AWS::ApiGatewayV2::Route\"},\"TodoAPIHttpProxyApiPOSTtodocreateCreateTodoIntegrationFA117612\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/TodoAPI/HttpProxyApi/POST--todo--create/CreateTodoIntegration/Resource\"},\"Properties\":{\"ApiId\":{\"Ref\":\"TodoAPIHttpProxyApi857EF4CE\"},\"IntegrationType\":\"AWS_PROXY\",\"IntegrationUri\":{\"Fn::GetAtt\":[\"CreateTodoServiceE4392CFC\",\"Arn\"]},\"PayloadFormatVersion\":\"2.0\"},\"Type\":\"AWS::ApiGatewayV2::Integration\"},\"TodoAPIHttpProxyApiPOSTtodocreateCreateTodoIntegrationPermission724299A2\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/TodoAPI/HttpProxyApi/POST--todo--create/CreateTodoIntegration-Permission\"},\"Properties\":{\"Action\":\"lambda:InvokeFunction\",\"FunctionName\":{\"Fn::GetAtt\":[\"CreateTodoServiceE4392CFC\",\"Arn\"]},\"Principal\":\"apigateway.amazonaws.com\",\"SourceArn\":{\"Fn::Join\":[\"\",[\"arn:\",{\"Ref\":\"AWS::Partition\"},\":execute-api:\",{\"Ref\":\"AWS::Region\"},\":\",{\"Ref\":\"AWS::AccountId\"},\":\",{\"Ref\":\"TodoAPIHttpProxyApi857EF4CE\"},\"/*/*/todo/create\"]]}},\"Type\":\"AWS::Lambda::Permission\"},\"UpdateTodoServiceB8A1B2FD\":{\"DependsOn\":[\"UpdateTodoServiceServiceRoleDefaultPolicy3141237E\",\"UpdateTodoServiceServiceRoleBAA8D185\"],\"Metadata\":{\"aws:asset:is-bundled\":true,\"aws:asset:path\":\"asset.3079bfe622d096278c481fc8dd25222d630c446eaa1328a42775f97e83f049c3\",\"aws:asset:property\":\"Code\",\"aws:cdk:path\":\"InfrastructureStack/UpdateTodoService/Resource\"},\"Properties\":{\"Code\":{\"S3Bucket\":{\"Fn::Sub\":\"cdk-hnb659fds-assets-$${AWS::AccountId}-$${AWS::Region}\"},\"S3Key\":\"3079bfe622d096278c481fc8dd25222d630c446eaa1328a42775f97e83f049c3.zip\"},\"Environment\":{\"Variables\":{\"AWS_NODEJS_CONNECTION_REUSE_ENABLED\":\"1\",\"DYNAMO_DB_TABLE\":{\"Ref\":\"DatabaseTodoTable3E2AC78E\"}}},\"Handler\":\"index.updateTodo\",\"Role\":{\"Fn::GetAtt\":[\"UpdateTodoServiceServiceRoleBAA8D185\",\"Arn\"]},\"Runtime\":\"nodejs14.x\",\"TracingConfig\":{\"Mode\":\"Active\"}},\"Type\":\"AWS::Lambda::Function\"},\"UpdateTodoServiceLogRetention9B00F2E3\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/UpdateTodoService/LogRetention/Resource\"},\"Properties\":{\"LogGroupName\":{\"Fn::Join\":[\"\",[\"/aws/lambda/\",{\"Ref\":\"UpdateTodoServiceB8A1B2FD\"}]]},\"RetentionInDays\":1,\"ServiceToken\":{\"Fn::GetAtt\":[\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\",\"Arn\"]}},\"Type\":\"Custom::LogRetention\"},\"UpdateTodoServiceServiceRoleBAA8D185\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/UpdateTodoService/ServiceRole/Resource\"},\"Properties\":{\"AssumeRolePolicyDocument\":{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"},\"ManagedPolicyArns\":[{\"Fn::Join\":[\"\",[\"arn:\",{\"Ref\":\"AWS::Partition\"},\":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]},\"Type\":\"AWS::IAM::Role\"},\"UpdateTodoServiceServiceRoleDefaultPolicy3141237E\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/UpdateTodoService/ServiceRole/DefaultPolicy/Resource\"},\"Properties\":{\"PolicyDocument\":{\"Statement\":[{\"Action\":[\"xray:PutTelemetryRecords\",\"xray:PutTraceSegments\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"dynamodb:BatchGetItem\",\"dynamodb:BatchWriteItem\",\"dynamodb:ConditionCheckItem\",\"dynamodb:DeleteItem\",\"dynamodb:DescribeTable\",\"dynamodb:GetItem\",\"dynamodb:GetRecords\",\"dynamodb:GetShardIterator\",\"dynamodb:PutItem\",\"dynamodb:Query\",\"dynamodb:Scan\",\"dynamodb:UpdateItem\"],\"Effect\":\"Allow\",\"Resource\":[{\"Fn::GetAtt\":[\"DatabaseTodoTable3E2AC78E\",\"Arn\"]},{\"Fn::Join\":[\"\",[{\"Fn::GetAtt\":[\"DatabaseTodoTable3E2AC78E\",\"Arn\"]},\"/index/*\"]]}]}],\"Version\":\"2012-10-17\"},\"PolicyName\":\"UpdateTodoServiceServiceRoleDefaultPolicy3141237E\",\"Roles\":[{\"Ref\":\"UpdateTodoServiceServiceRoleBAA8D185\"}]},\"Type\":\"AWS::IAM::Policy\"},\"WebappBucket620531E5\":{\"DeletionPolicy\":\"Delete\",\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/WebappBucket/Resource\"},\"Properties\":{\"BucketEncryption\":{\"ServerSideEncryptionConfiguration\":[{\"ServerSideEncryptionByDefault\":{\"SSEAlgorithm\":\"AES256\"}}]},\"Tags\":[{\"Key\":\"aws-cdk:auto-delete-objects\",\"Value\":\"true\"},{\"Key\":\"aws-cdk:cr-owned:eef8bb98\",\"Value\":\"true\"}]},\"Type\":\"AWS::S3::Bucket\",\"UpdateReplacePolicy\":\"Delete\"},\"WebappBucketAutoDeleteObjectsCustomResourceB345AD2E\":{\"DeletionPolicy\":\"Delete\",\"DependsOn\":[\"WebappBucketPolicyB03C4E01\"],\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/WebappBucket/AutoDeleteObjectsCustomResource/Default\"},\"Properties\":{\"BucketName\":{\"Ref\":\"WebappBucket620531E5\"},\"ServiceToken\":{\"Fn::GetAtt\":[\"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\",\"Arn\"]}},\"Type\":\"Custom::S3AutoDeleteObjects\",\"UpdateReplacePolicy\":\"Delete\"},\"WebappBucketPolicyB03C4E01\":{\"Metadata\":{\"aws:cdk:path\":\"InfrastructureStack/WebappBucket/Policy/Resource\"},\"Properties\":{\"Bucket\":{\"Ref\":\"WebappBucket620531E5\"},\"PolicyDocument\":{\"Statement\":[{\"Action\":[\"s3:DeleteObject*\",\"s3:GetBucket*\",\"s3:List*\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":{\"Fn::GetAtt\":[\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\",\"Arn\"]}},\"Resource\":[{\"Fn::GetAtt\":[\"WebappBucket620531E5\",\"Arn\"]},{\"Fn::Join\":[\"\",[{\"Fn::GetAtt\":[\"WebappBucket620531E5\",\"Arn\"]},\"/*\"]]}]},{\"Action\":[\"s3:GetBucket*\",\"s3:GetObject*\",\"s3:List*\"],\"Effect\":\"Allow\",\"Principal\":{\"CanonicalUser\":{\"Fn::GetAtt\":[\"MyOriginAccessIdentity96ED0331\",\"S3CanonicalUserId\"]}},\"Resource\":[{\"Fn::GetAtt\":[\"WebappBucket620531E5\",\"Arn\"]},{\"Fn::Join\":[\"\",[{\"Fn::GetAtt\":[\"WebappBucket620531E5\",\"Arn\"]},\"/*\"]]}]},{\"Action\":\"s3:GetObject\",\"Effect\":\"Allow\",\"Principal\":{\"CanonicalUser\":{\"Fn::GetAtt\":[\"MyOriginAccessIdentity96ED0331\",\"S3CanonicalUserId\"]}},\"Resource\":{\"Fn::Join\":[\"\",[{\"Fn::GetAtt\":[\"WebappBucket620531E5\",\"Arn\"]},\"/*\"]]}}],\"Version\":\"2012-10-17\"}},\"Type\":\"AWS::S3::BucketPolicy\"}},\"Rules\":{\"CheckBootstrapVersion\":{\"Assertions\":[{\"Assert\":{\"Fn::Not\":[{\"Fn::Contains\":[[\"1\",\"2\",\"3\",\"4\",\"5\"],{\"Ref\":\"BootstrapVersion\"}]}]},\"AssertDescription\":\"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}"
  timeout_in_minutes = "0"
}
